// Header for Calculator
.heading {
  font: Georgia;
  font-size: 3.5vh;  // Using vh so size is 1/100 height of viewport
  text-transform: uppercase;
  text-align: center;
  text-decoration: underline;
}

// Creates the outline of the calculator
.calculator {
  background: lightgrey;
  width: calc(60vh);
  margin: 0 auto;
  position: relative;
  border-radius: 10px;
  box-sizing: content-box;
  padding-bottom: 1vh;
  padding-right: 1vh;
  border: 2px solid black;
}

.calculator::after, // Creates cosmetics. Clears and adds space.
// helps create the layout of the calculator
.buttons::after {
  clear: both;
  content: '';
  display: block;
}

// All buttons have same dimensions
button {
  font-family: "Georgia", monospace; // letters and characters each occupy the
  //same amount of horizontal space. This contrasts with variable-width fonts,
  //where the letters and spacings have different widths.
  height: 10vh;
  width: 12.5vh;
  display: block;
  float: left;
  font-size: 5vh;
  background: #989683;  //greyish
  box-sizing: border-box; // Specify that <div> elements should have padding
  //and border included in the element's total width and height:
  border: 2px solid black;
  border-radius: 15px;
  color: white;
  margin: 1vh;
  text-shadow: // shadowing helps make the font appear more clear and crisp.
    rgba(0,0,0,0.1) -1px 0, rgba(0,0,0,0.1) 0 -1px,
    rgba(255,255,255,0.1) 1px 0, rgba(255,255,255,0.1) 0 1px,
    rgba(0,0,0,0.1) -1px -1px, rgba(255,255,255,0.1) 1px 1px;
  box-shadow:  // shadowing helps make the buttons appear popped out.
    inset .5vh .5vh .2vh rgba(255,255,255,0.3),
    inset -.5vh -.5vh .2vh rgba(0,0,0,0.1),
    .5vh .5vh .2vh rgba(0,0,0,0.2);
  }

button:focus {  //used for styling an element that is currently targeted by
  //the keyboard, or activated by the mouse.
  outline: 0;  //turned to zero because we don't want an outline around the
  //button when pressed.
}

// Output screen
#answer {
  font-family: "Georgia", monospace;
  color: #272F1B;
  font-size: 6vh;
  height: 10vh;
  clear: right; //specifies whether an element can be next to floating elements
  // that precede it or must be moved down (cleared) below them.
  margin: 2vh 1.2vh 0 2.4vh;
  border-radius: 2px;
  box-shadow: // Creates shaded outline for output line
    inset .5vh .5vh 1vh rgba(0,0,0,.1),
    inset -.1vh -.1vh 1vh rgba(0,0,0,.1);
  text-align: right;
  padding-left: 2vh;
  position: relative;
  line-height: 13vh;
  width: 39.5vh;
  float: left;
}

#answer::after { //matches a virtual last child of the selected element.
  // It is typically used to add cosmetic content to an element
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 100%;
  content: '';
}

// Clear button to clear the display and reverts to 0
button.clear {
  margin-top: 2vh;
  margin-right: -.1vh;
  float:right;
}

// Styling of the numbers buttons
.numbers {
  width: 45.5vh;
  float: left;
  padding-left: 1vh;
}

// Styling of the operators inside of the button
.operators {
  width: 12.5vh;
  float: left;
  padding-right: 1vh;
}

// Styling of the actual operator buttons
.operators button {
  color: #272F1B;
  background: #bf700f;
  border-left-color: #DADADA;
  border-top-color: #DADADA;
  border-right-color: #b8b8b8;
  border-bottom-color: #b8b8b8;
  border: 1px solid black;
  box-shadow:
    inset .5vh .5vh .2vh rgba(255,255,255,0.3),
    inset -.5vh -.5vh .2vh rgba(0,0,0,0.05),
    .5vh .5vh .2vh rgba(0,0,0,0.1)
}

// Creates the blue equals button
button.equals {
  position: absolute;
  bottom: 2.1vh;
  right: 16.3vh;
  background: #1665AF;
  border: 2px solid black;
}
